# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI_test3.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
import GUI_MainUI_Copy as dp

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 720)
        MainWindow.setStyleSheet("background-color: white")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.FileDirectory_PB = QtWidgets.QPushButton(self.centralwidget)
        self.FileDirectory_PB.setGeometry(QtCore.QRect(10, 110, 161, 25))
        self.FileDirectory_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.FileDirectory_PB.setObjectName("FileDirectory_PB")
        self.FileDirectory_PB.clicked.connect(self.OpenDialogIdClick)
        self.VerifFileDir_PB = QtWidgets.QPushButton(self.centralwidget)
        self.VerifFileDir_PB.setGeometry(QtCore.QRect(190, 110, 161, 25))
        self.VerifFileDir_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.VerifFileDir_PB.setObjectName("VerifFileDir_PB")
        self.VerifFileDir_PB.clicked.connect(self.OpenDialogVerClick)
        font = QtGui.QFont()
        font.setPointSize(7.7)
        self.FileDir_lbl = QtWidgets.QLabel(self.centralwidget)
        self.FileDir_lbl.setGeometry(QtCore.QRect(10, 130, 170, 14))
        self.FileDir_lbl.setObjectName("FileDir_lbl")
        self.FileDir_lbl.setFont(font)
        self.VerifFileDir_lbl = QtWidgets.QLabel(self.centralwidget)
        self.VerifFileDir_lbl.setGeometry(QtCore.QRect(190, 130, 170, 14))
        self.VerifFileDir_lbl.setObjectName("VerifFileDir_lbl")
        self.VerifFileDir_lbl.setFont(font)
        self.SelectMLmeth_GB = QtWidgets.QGroupBox(self.centralwidget)
        self.SelectMLmeth_GB.setGeometry(QtCore.QRect(10, 40, 890, 60))
        self.SelectMLmeth_GB.setTitle("")
        self.SelectMLmeth_GB.setObjectName("SelectMLmeth_GB")
        self.SelectMLmethod_lbl = QtWidgets.QLabel(self.SelectMLmeth_GB)
        self.SelectMLmethod_lbl.setGeometry(QtCore.QRect(10, 2, 361, 31))
        font = QtGui.QFont()
        font.setPointSize(8)
        y = 110
        self.y = y+40
        self.n=self.y
        self.SelectMLmethod_lbl.setFont(font)
        self.SelectMLmethod_lbl.setObjectName("SelectMLmethod_lbl")
        self.SelectMLmethod_CB = QtWidgets.QComboBox(self.SelectMLmeth_GB)
        self.SelectMLmethod_CB.setGeometry(QtCore.QRect(130, 10, 201, 25))
        self.SelectMLmethod_CB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.SelectMLmethod_CB.setObjectName("SelectMLmethod_CB")
        self.SelectMLmethod_CB.addItem("")
        self.SelectMLmethod_CB.addItem("")
        self.SelectMLmethod_CB.addItem("")
        self.SelectMLmethod_CB.currentIndexChanged.connect(self.Updatelist)
        self.SystemOrder_SB = QtWidgets.QSpinBox(self.SelectMLmeth_GB)
        self.SystemOrder_SB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.SystemOrder_SB.setGeometry(QtCore.QRect(130, 35, 42, 22))
        self.SystemOrder_SB.setObjectName("SystemOrder_SB")
        self.SystemOrder_lbl = QtWidgets.QLabel(self.SelectMLmeth_GB)
        self.SystemOrder_lbl.setGeometry(QtCore.QRect(10, 35, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.SystemOrder_lbl.setFont(font)
        self.SystemOrder_lbl.setObjectName("SystemOrder_lbl")
        font = QtGui.QFont()
        font.setPointSize(7.7)
        self.Order_Chk_lbl = QtWidgets.QLabel(self.SelectMLmeth_GB)
        self.Order_Chk_lbl.setGeometry(QtCore.QRect(180, 30, 111, 16))
        self.Order_Chk_lbl.setObjectName("Order_Chk_lbl")
        self.Order_Chk_lbl.setFont(font)
        self.Execute_PB = QtWidgets.QPushButton(self.centralwidget)
        self.Execute_PB.setGeometry(QtCore.QRect(370, 180+self.y + 20, 171, 41))
        self.Execute_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Execute_PB.setObjectName("Execute_PB")
        self.Execute_PB.clicked.connect(self.Execute)
        self.ViewStats_PB = QtWidgets.QPushButton(self.centralwidget)
        self.ViewStats_PB.setGeometry(QtCore.QRect(190, 180+self.y + 20, 171, 41))
        self.ViewStats_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewStats_PB.setObjectName("ViewStats_PB")
        self.ViewStats_PB.clicked.connect(self.ViewStats)
        self.SignalsGB = QtWidgets.QGroupBox(self.centralwidget)
        self.SignalsGB.setGeometry(QtCore.QRect(10, 150, 890, 140))
        self.SignalsGB.setObjectName("SignalsGB")
        self.InputSignals_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.InputSignals_lbl.setGeometry(QtCore.QRect(10, 20, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.InputSignals_lbl.setFont(font)
        self.InputSignals_lbl.setObjectName("InputSignals_lbl")
        self.OutputSignals_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.OutputSignals_lbl.setGeometry(QtCore.QRect(10, 110, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.OutputSignals_lbl.setFont(font)
        self.OutputSignals_lbl.setObjectName("OutputSignals_lbl")
        self.OutputRnge_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.OutputRnge_lbl.setGeometry(QtCore.QRect(440, 90, 100, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.OutputRnge_lbl.setFont(font)
        self.OutputRnge_lbl.setObjectName("OutputRnge_lbl")
        self.OutputMax_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.OutputMax_lbl.setGeometry(QtCore.QRect(560, 90, 100, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        # self.OutSigName_lbl = QtWidgets.QLabel(self.SignalsGB)
        # self.OutSigName_lbl.setGeometry(QtCore.QRect(440, 70, 91, 21))
        # self.OutSigName_lbl.setFont(font)
        # self.OutSigName_lbl.setObjectName("OutSigName_lbl")
        self.OutputMax_lbl.setFont(font)
        self.OutputMax_lbl.setObjectName("OutputMax_lbl")
        self.InputSignals_TxtBox = QtWidgets.QPlainTextEdit(self.SignalsGB)
        self.InputSignals_TxtBox.setGeometry(QtCore.QRect(130, 19, 311, 25))
        self.InputSignals_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.InputSignals_TxtBox.setObjectName("InputSignals_TxtBox")
        self.InputSignalsFormat_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.InputSignalsFormat_lbl.setGeometry(QtCore.QRect(130, 44, 351, 19))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.InputSignalsFormat_lbl.setFont(font)
        self.InputSignalsFormat_lbl.setObjectName("InputSignalsFormat_lbl")
        self.OutputSignals_TxtBox = QtWidgets.QPlainTextEdit(self.SignalsGB)
        self.OutputSignals_TxtBox.setGeometry(QtCore.QRect(130, 90, 301, 25))
        self.OutputSignals_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.OutputSignals_TxtBox.setObjectName("OutputSignals_TxtBox")
        self.NoOfOut_CB = QtWidgets.QComboBox(self.SignalsGB)
        self.NoOfOut_CB.setGeometry(QtCore.QRect(130, 60, 201, 25))
        self.NoOfOut_CB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.NoOfOut_CB.setObjectName("NoOfOut_CB")
        self.NoOfOut_CB.addItem("")
        self.NoOfOut_CB.addItem("")
        self.NoOfOut_CB.addItem("")
        self.NoOfOut_CB.currentIndexChanged.connect(self.Updatelist)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.NoOfOuttSignals_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.NoOfOuttSignals_lbl.setGeometry(QtCore.QRect(10, 60, 111, 21))
        self.NoOfOuttSignals_lbl.setFont(font)
        self.NoOfOuttSignals_lbl.setObjectName("NoOfOuttSignals_lbl")
        font = QtGui.QFont()
        font.setPointSize(7.7)
        self.InpSig_Check_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.InpSig_Check_lbl.setGeometry(QtCore.QRect(445, 25, 160, 16))
        self.InpSig_Check_lbl.setObjectName("InpSig_Check_lbl")
        self.InpSig_Check_lbl.setFont(font)
        self.SIPPYHeader_lbl = QtWidgets.QLabel(self.centralwidget)
        self.SIPPYHeader_lbl.setGeometry(QtCore.QRect(230, 10, 361, 21))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.SIPPYHeader_lbl.setFont(font)
        self.SIPPYHeader_lbl.setObjectName("SIPPYHeader_lbl")
        self.Results_TxtBox = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.Results_TxtBox.setGeometry(QtCore.QRect(10, 710, 431, 261))
        self.Results_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Results_TxtBox.setObjectName("Results_TxtBox")
        self.Stats_Chk_lbl = QtWidgets.QLabel(self.centralwidget)
        self.Stats_Chk_lbl.setGeometry(QtCore.QRect(190, 640, 111, 16))
        self.Stats_Chk_lbl.setObjectName("Stats_Chk_lbl")
        self.Validate_PB = QtWidgets.QPushButton(self.centralwidget)
        self.Validate_PB.setGeometry(QtCore.QRect(550, 180+self.y + 20, 171, 41))
        self.Validate_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Validate_PB.setObjectName("Validate_PB")
        self.Validate_PB.clicked.connect(self.Validate)
        self.ViewResults_PB = QtWidgets.QPushButton(self.centralwidget)
        self.ViewResults_PB.setGeometry(QtCore.QRect(730, 180+self.y + 20, 171, 41))
        self.ViewResults_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewResults_PB.setObjectName("ViewResults_PB")
        self.ViewResults_PB.clicked.connect(self.ViewResults)
        self.Exec_Chk = QtWidgets.QLabel(self.centralwidget)
        self.Exec_Chk.setGeometry(QtCore.QRect(370, 640, 111, 16))
        self.Exec_Chk.setObjectName("Exec_Chk")
        self.Vald_Chk_lbl = QtWidgets.QLabel(self.centralwidget)
        self.Vald_Chk_lbl.setGeometry(QtCore.QRect(550, 640, 111, 16))
        self.Vald_Chk_lbl.setObjectName("Vald_Chk_lbl")
        self.Results_Chk = QtWidgets.QLabel(self.centralwidget)
        self.Results_Chk.setGeometry(QtCore.QRect(730, 640, 111, 16))
        self.Results_Chk.setObjectName("Results_Chk")
        self.Results_lbl = QtWidgets.QLabel(self.centralwidget)
        self.Results_lbl.setGeometry(QtCore.QRect(10, 690, 111, 16))
        self.Results_lbl.setObjectName("Results_lbl")
        self.CheckFiles_PB = QtWidgets.QPushButton(self.centralwidget)
        self.CheckFiles_PB.setGeometry(QtCore.QRect(10, 180+self.y + 20, 171, 41))
        self.CheckFiles_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.CheckFiles_PB.setObjectName("CheckFiles_PB")
        self.CheckFiles_PB.clicked.connect(self.CheckFiles)
        self.OutputSignalsFormat_lbl = QtWidgets.QLabel(self.SignalsGB)
        self.OutputSignalsFormat_lbl.setGeometry(QtCore.QRect(130, 90, 231, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.OutputSignalsFormat_lbl.setFont(font)
        self.OutputSignalsFormat_lbl.setObjectName("OutputSignalsFormat_lbl")
        '''ANN code'''
        self.ANN_GB = QtWidgets.QGroupBox(self.centralwidget)
        self.ANN_GB.setGeometry(QtCore.QRect(10, 300, 890, 191))
        self.ANN_GB.setObjectName("ANN_GB")
        self.LearningRate_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.LearningRate_lbl.setGeometry(QtCore.QRect(10, 50, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.LearningRate_lbl.setFont(font)
        self.LearningRate_lbl.setObjectName("LearningRate_lbl")
        self.LayerDetails_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.LayerDetails_lbl.setGeometry(QtCore.QRect(10, 130, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.LayerDetails_lbl.setFont(font)
        self.LayerDetails_lbl.setObjectName("LayerDetails_lbl")
        self.NoofNeuron_TxtBox = QtWidgets.QPlainTextEdit(self.ANN_GB)
        self.NoofNeuron_TxtBox.setGeometry(QtCore.QRect(310, 130, 101, 25))
        self.NoofNeuron_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.NoofNeuron_TxtBox.setObjectName("NoofNeuron_TxtBox")
        self.No_Neurons_Chk = QtWidgets.QLabel(self.ANN_GB)
        self.No_Neurons_Chk.setGeometry(QtCore.QRect(310, 155, 101, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.No_Neurons_Chk.setFont(font)
        self.No_Neurons_Chk.setObjectName("No_Neurons_Chk")
        self.No_of_Neurons_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.No_of_Neurons_lbl.setGeometry(QtCore.QRect(310, 110, 91, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.No_of_Neurons_lbl.setFont(font)
        self.No_of_Neurons_lbl.setObjectName("No_of_Neurons_lbl")
        self.Actvn_Fn_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.Actvn_Fn_lbl.setGeometry(QtCore.QRect(430, 110, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.Actvn_Fn_lbl.setFont(font)
        self.Actvn_Fn_lbl.setObjectName("Actvn_Fn_lbl")
        self.LearningRate_TxtBox = QtWidgets.QPlainTextEdit(self.ANN_GB)
        self.LearningRate_TxtBox.setGeometry(QtCore.QRect(150, 48, 311, 25))
        self.LearningRate_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.LearningRate_TxtBox.setObjectName("LearningRate_TxtBox")
        self.LearningRateFormat_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.LearningRateFormat_lbl.setGeometry(QtCore.QRect(150, 73, 351, 18))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.LearningRateFormat_lbl.setFont(font)
        self.LearningRateFormat_lbl.setObjectName("LearningRateFormat_lbl")
        self.LayerNameFormat_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.LayerNameFormat_lbl.setGeometry(QtCore.QRect(150, 155, 101, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setUnderline(False)
        self.LayerNameFormat_lbl.setFont(font)
        self.LayerNameFormat_lbl.setObjectName("LayerNameFormat_lbl")
        self.Layer_Name_TxtBox = QtWidgets.QPlainTextEdit(self.ANN_GB)
        self.Layer_Name_TxtBox.setGeometry(QtCore.QRect(150, 130, 141, 25))
        self.Layer_Name_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Layer_Name_TxtBox.setObjectName("Layer_Name_TxtBox")
        self.NoOfLayers_CombBox = QtWidgets.QComboBox(self.ANN_GB)
        self.NoOfLayers_CombBox.setGeometry(QtCore.QRect(150, 90, 31, 22))
        self.NoOfLayers_CombBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.NoOfLayers_CombBox.setObjectName("NoOfLayers_CombBox")
        self.NoOfLayers_CombBox.addItem("")
        self.NoOfLayers_CombBox.addItem("")
        self.NoOfLayers_CombBox.addItem("")
        self.NoOfLayers_CombBox.addItem("")
        self.NoOfLayers_CombBox.addItem("")
        self.NoOfLayers_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.NoOfLayers_lbl.setGeometry(QtCore.QRect(10, 90, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.NoOfLayers_lbl.setFont(font)
        self.NoOfLayers_lbl.setObjectName("NoOfLayers_lbl")
        self.No_layers_chk = QtWidgets.QLabel(self.ANN_GB)
        self.No_layers_chk.setGeometry(QtCore.QRect(150, 111, 81, 18))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.No_layers_chk.setFont(font)
        self.No_layers_chk.setObjectName("No_layers_chk")
        self.NoOfNeuronsCheck_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.NoOfNeuronsCheck_lbl.setGeometry(QtCore.QRect(310, 170, 111, 16))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.NoOfNeuronsCheck_lbl.setFont(font)
        self.NoOfNeuronsCheck_lbl.setObjectName("NoOfNeuronsCheck_lbl")
        self.ANNDefatultValues_Txtbrwsr = QtWidgets.QTextBrowser(self.ANN_GB)
        self.ANNDefatultValues_Txtbrwsr.setGeometry(QtCore.QRect(520, 50, 321, 131))
        self.ANNDefatultValues_Txtbrwsr.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ANNDefatultValues_Txtbrwsr.setObjectName("ANNDefatultValues_Txtbrwsr")
        self.ANNDefatultValues_Txtbrwsr.setText('Default Architecture:\nLearning Rate : 1.e-4 \n'+\
                                                'No of Layers: 3\n1st Layer (Input) - 10 Neurons ; Activation Function : ReLu'+\
                                                    '\n2nd Layer (Hidden 1) - 5 Neurons; Activation Function : ReLu \n'+\
                                                        '3rd Layer (Output) - 1 Neuron; Activation Function : Dense \n'+\
                                                            'No. of epochs: 1000\nBatch_size : 32\nNo. of Samples: 200')
        self.ParameterTuning_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.ParameterTuning_lbl.setGeometry(QtCore.QRect(10, 20, 141, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.ParameterTuning_lbl.setFont(font)
        self.ParameterTuning_lbl.setObjectName("ParameterTuning_lbl")
        self.ParamterTuning_CombBox = QtWidgets.QComboBox(self.ANN_GB)
        self.ParamterTuning_CombBox.setGeometry(QtCore.QRect(150, 20, 201, 25))
        self.ParamterTuning_CombBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        font = QtGui.QFont()
        font.setPointSize(7.7)
        self.ParamterTuning_CombBox.setFont(font)
        self.ParamterTuning_CombBox.setObjectName("ParamterTuning_CombBox")
        self.ParamterTuning_CombBox.addItem("")
        self.ParamterTuning_CombBox.addItem("")
        self.Activation_fn_CmBx = QtWidgets.QComboBox(self.ANN_GB)
        self.Activation_fn_CmBx.setGeometry(QtCore.QRect(430, 130, 61, 25))
        self.Activation_fn_CmBx.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Activation_fn_CmBx.setObjectName("Activation_fn_CmBx")
        self.Activation_fn_CmBx.addItem("")
        self.Activation_fn_CmBx.addItem("")
        self.Activation_fn_CmBx.addItem("")
        self.Activation_fn_CmBx.addItem("")
        self.Activation_fn_CmBx.addItem("")
        self.LayerNameCheck_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.LayerNameCheck_lbl.setGeometry(QtCore.QRect(150, 171, 111, 16))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.LayerNameCheck_lbl.setFont(font)
        self.LayerNameCheck_lbl.setObjectName("LayerNameCheck_lbl")
        self.ANNLogDir_PushBtn = QtWidgets.QPushButton(self.ANN_GB)
        self.ANNLogDir_PushBtn.setGeometry(QtCore.QRect(370, 20, 141, 25))
        self.ANNLogDir_PushBtn.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        font = QtGui.QFont()
        font.setPointSize(7.7)
        self.ANNLogDir_PushBtn.setFont(font)
        self.ANNLogDir_PushBtn.setObjectName("ANNLogDir_PushBtn")
        self.ANNLogDir_PushBtn.clicked.connect(self.OpenDialogLogClick)
        self.ANNLogDir_lbl = QtWidgets.QLabel(self.ANN_GB)
        self.ANNLogDir_lbl.setGeometry(QtCore.QRect(520, 20, 141, 25))
        self.ANNLogDir_lbl.setObjectName("ANNLogDir_lbl")
        self.ANNLogDir_lbl.setFont(font)
        '''logos'''
        self.FEVlabel = QtWidgets.QLabel(MainWindow)
        self.FEVlabel.setGeometry(QtCore.QRect(880, 650, 111, 51))
        self.FEVlabel.setText("")
        self.FEVlabel.setPixmap(QtGui.QPixmap("FEV.jpg"))
        self.FEVlabel.setObjectName("label")
        self.FEVlabel_2 = QtWidgets.QLabel(MainWindow)
        self.FEVlabel_2.setGeometry(QtCore.QRect(940, 0, 105, 111))
        self.FEVlabel_2.setText("")
        self.FEVlabel_2.setPixmap(QtGui.QPixmap("FEV2.jpg"))
        self.FEVlabel_2.setObjectName("label_2")
        self.FEVlabel_3 = QtWidgets.QLabel(MainWindow)
        self.FEVlabel_3.setGeometry(QtCore.QRect(230, 670, 411, 21))
        self.FEVlabel_3.setText("© by FEV – all rights reserved. Confidential – no passing on to third parties")
        self.FEVlabel_3.setStyleSheet("color: black")
        self.FEVlabel_3.setObjectName("label_3")
        
        self.SignalsGB.raise_()
        self.FileDirectory_PB.raise_()
        self.SelectMLmeth_GB.raise_()
        self.Execute_PB.raise_()
        self.ViewStats_PB.raise_()
        self.SIPPYHeader_lbl.raise_()
        self.VerifFileDir_PB.raise_()
        self.Results_TxtBox.raise_()
        self.Stats_Chk_lbl.raise_()
        self.FileDir_lbl.raise_()
        self.Validate_PB.raise_()
        self.ViewResults_PB.raise_()
        self.VerifFileDir_lbl.raise_()
        self.Exec_Chk.raise_()
        self.Vald_Chk_lbl.raise_()
        self.Results_Chk.raise_()
        self.Results_lbl.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1123, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # print(self.y+20)
        self.OpTextBoxes = {}
        self.OpRngeTextBoxes = {}
        self.OpMaxTextBoxes = {}
        self.OutCheck={}
        self.OutMaxCheck={}
        self.OutRngeCheck={}
        self.num2=0
        self.TextBoxes = {}
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # print("y at start: "+str(y))
        for i in range(0, 5):
            # name='OutputSignals_TxtBox'+str(i)
            self.OutputSignals_TxtBox = QtWidgets.QPlainTextEdit(self.SignalsGB)
            self.OutputSignals_TxtBox.setGeometry(QtCore.QRect(130, y, 301, 25))
            self.OutputSignals_TxtBox.setObjectName('OutputSignals_TxtBox')
            self.OutputRnge_TxtBox = QtWidgets.QPlainTextEdit(self.SignalsGB)
            self.OutputRnge_TxtBox.setGeometry(QtCore.QRect(440, y, 110, 25))
            self.OutputRnge_TxtBox.setObjectName("OutputRnge_TxtBox")
            self.OutputMax_TxtBox = QtWidgets.QPlainTextEdit(self.SignalsGB)
            self.OutputMax_TxtBox.setGeometry(QtCore.QRect(560, y, 110, 25))
            self.OutputMax_TxtBox.setObjectName("OutputMax_TxtBox")
            self.OutputSignals_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
            self.OutputRnge_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
            self.OutputMax_TxtBox.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
            
            font = QtGui.QFont()
            font.setPointSize(7.7)
            self.OutSig_Check_lbl = QtWidgets.QLabel(self.SignalsGB)
            self.OutSig_Check_lbl.setGeometry(QtCore.QRect(130, y+25, 90, 14))
            self.OutSig_Check_lbl.setObjectName("OutSig_Check_lbl")
            self.OutSig_Check_lbl.setFont(font)
            self.OutRnge_Check_lbl = QtWidgets.QLabel(self.SignalsGB)
            self.OutRnge_Check_lbl.setGeometry(QtCore.QRect(440, y+25, 90, 14))
            self.OutRnge_Check_lbl.setObjectName("OutRnge_Check_lbl")
            self.OutRnge_Check_lbl.setFont(font)
            self.OutMax_Chk_lbl = QtWidgets.QLabel(self.SignalsGB)
            self.OutMax_Chk_lbl.setGeometry(QtCore.QRect(560, y+25, 90, 14))
            self.OutMax_Chk_lbl.setObjectName("OutMax_Chk_lbl")
            self.OutMax_Chk_lbl.setFont(font)
            
            self.TextBoxes[i] = self.OutputSignals_TxtBox
            self.OpRngeTextBoxes[i]=self.OutputRnge_TxtBox
            self.OpMaxTextBoxes[i]=self.OutputMax_TxtBox
            self.OutCheck[i]=self.OutSig_Check_lbl
            self.OutMaxCheck[i]=self.OutMax_Chk_lbl
            self.OutRngeCheck[i]=self.OutRnge_Check_lbl

            y = y + 40

        for m in range(1,len(self.TextBoxes)):
            self.TextBoxes[m].setHidden(True)
        for m in range(1,len(self.OpRngeTextBoxes)):
           self.OpRngeTextBoxes[m].setHidden(True)
        for m in range(1,len(self.OpMaxTextBoxes)):
           self.OpMaxTextBoxes[m].setHidden(True)
        for m in range(1,len(self.OutCheck)):
            self.OutCheck[m].setHidden(True)
        for m in range(1,len(self.OutRngeCheck)):
            self.OutRngeCheck[m].setHidden(True)
        for m in range(1,len(self.OutMaxCheck)):
            self.OutMaxCheck[m].setHidden(True)
        
        # print('y at complete start: '+str(y))
        self.CheckFiles_PB.setGeometry(QtCore.QRect(10, 180+self.y+20, 171, 41))
        self.CheckFiles_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewStats_PB.setGeometry(QtCore.QRect(190, 180 + self.y + 20, 171, 41))
        self.ViewStats_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Execute_PB.setGeometry(QtCore.QRect(370, 180 + self.y + 20, 171, 41))
        self.Execute_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Validate_PB.setGeometry(QtCore.QRect(550, 180 + self.y + 20, 171, 41))
        self.Validate_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewResults_PB.setGeometry(QtCore.QRect(730, 180 + self.y + 20, 171, 41))
        self.Stats_Chk_lbl.setGeometry(QtCore.QRect(190, 180 + self.y + 60, 111, 16))
        self.Exec_Chk.setGeometry(QtCore.QRect(370, 180 + self.y + 60, 111, 16))
        self.Vald_Chk_lbl.setGeometry(QtCore.QRect(550, 180 + self.y + 60, 111, 16))
        self.Results_Chk.setGeometry(QtCore.QRect(730, 180 + self.y + 60, 111, 16))
        self.Results_lbl.setGeometry(QtCore.QRect(10, 180 + self.y + 90, 111, 41))
        self.Results_TxtBox.setGeometry(QtCore.QRect(10, 180 + self.y + 120, 300, 400))
        self.SignalsGB.setGeometry(QtCore.QRect(10, 150, 890, self.y+20))
        # print(self.y)
        # self.y = 141
    def OpenDialogIdClick(self):
        self.OpenFileIddialog()

    def OpenFileIddialog(self):
        Options=QtWidgets.QFileDialog.Options()
        #filename=QtWidgets.QFileDialog.getOpenFileName()
        self.filepathId = str(QtWidgets.QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.FileDir_lbl.setStyleSheet("background-color: None")
        self.FileDir_lbl.setText(self.filepathId)
        self.FileDir_lbl.setHidden(False)
        # self.FileDir_lbl.setStyleSheet("background-color: lightgreen")
    def OpenDialogVerClick(self):
        self.OpenFileVerdialog()

    def OpenFileVerdialog(self):
        Options=QtWidgets.QFileDialog.Options()
        #filename=QtWidgets.QFileDialog.getOpenFileName()
        self.filepathVer = str(QtWidgets.QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.VerifFileDir_lbl.setStyleSheet("background-color: None")
        self.VerifFileDir_lbl.setText(self.filepathVer)
        self.VerifFileDir_lbl.setHidden(False)
        # self.VerifFileDir_lbl.setStyleSheet("background-color: lightgreen")
    def OpenDialogLogClick(self):
        self.OpenFileLogdialog()

    def OpenFileLogdialog(self):
        Options=QtWidgets.QFileDialog.Options()
        #filename=QtWidgets.QFileDialog.getOpenFileName()
        self.ANNlogvar = str(QtWidgets.QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.ANNLogDir_lbl.setStyleSheet("background-color: None")
        self.ANNLogDir_lbl.setText(self.ANNlogvar)
        self.ANNLogDir_lbl.setHidden(False)
        # self.VerifFileDir_lbl.setStyleSheet("background-color: lightgreen")
    def Allclose(self):
       self.FileDir_lbl.setStyleSheet("background-color: None")
       self.VerifFileDir_lbl.setStyleSheet("background-color: None")
       self.InpSig_Check_lbl.setStyleSheet("background-color: None")
       self.OutSig_Check_lbl.setStyleSheet("background-color: None")
       self.OutRnge_Check_lbl.setStyleSheet("background-color: None")
       self.OutMax_Chk_lbl.setStyleSheet("background-color: None")
       self.Order_Chk_lbl.setStyleSheet("background-color: None")
       # self.FileDir_lbl.setText(self.filepathId)
       # self.VerifFileDir_lbl.setText(self.filepathVer)
       self.Order_Chk_lbl.setText('')
       self.InpSig_Check_lbl.setText('')
       self.OutSig_Check_lbl.setText('')
       self.OutRnge_Check_lbl.setText('')
       self.OutMax_Chk_lbl.setText('')
       self.Exec_Chk.setHidden(True)
       self.Results_lbl.setHidden(True)
       self.Results_Chk.setHidden(True)
       self.Results_TxtBox.setHidden(True)
       self.Vald_Chk_lbl.setHidden(True)
       self.Stats_Chk_lbl.setHidden(True)    
    
    def HideAll(self):
        for i in range(0,5):
            self.TextBoxes[i].setHidden(True)
            self.OpRngeTextBoxes[i].setHidden(True)
            self.OpMaxTextBoxes[i].setHidden(True)
            self.OutCheck[i].setHidden(True)
            self.OutRngeCheck[i].setHidden(True)
            self.OutMaxCheck[i].setHidden(True)
            
    def Updatelist(self):
        self.HideAll()
        self.y = 201
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setUnderline(False)
        num=int(self.NoOfOut_CB.currentText())        
        y=70
        # print('y at start: '+str(y))
        # print('self y at start: '+str(self.y))
        y=y+(40*num)
        self.y = y + 10
        for m in range(0, num):
            # print('nothing to do idiot')
            self.TextBoxes[m].setHidden(False)
            self.OpRngeTextBoxes[m].setHidden(False)
            self.OpMaxTextBoxes[m].setHidden(False)
        Met=self.SelectMLmethod_CB.currentText()
        if Met == 'Artifical Neural Network':
            self.n=380
            self.ANN_GB.setHidden(False)
            MainWindow.resize(1000, 720)
        else:
            self.n=180
            self.ANN_GB.setHidden(True)
        self.CheckFiles_PB.setGeometry(QtCore.QRect(10, self.n+self.y+20, 171, 41))
        self.ViewStats_PB.setGeometry(QtCore.QRect(190, self.n + self.y + 20, 171, 41))
        self.Execute_PB.setGeometry(QtCore.QRect(370, self.n + self.y + 20, 171, 41))
        self.Validate_PB.setGeometry(QtCore.QRect(550, self.n + self.y + 20, 171, 41))
        self.ViewResults_PB.setGeometry(QtCore.QRect(730, self.n + self.y + 20, 171, 41))
        self.CheckFiles_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewStats_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Execute_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Validate_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.ViewResults_PB.setStyleSheet("color: black; background-color:rgb(230, 230, 230) ")
        self.Stats_Chk_lbl.setGeometry(QtCore.QRect(190, self.n + self.y + 60, 171, 16))
        self.Exec_Chk.setGeometry(QtCore.QRect(370, self.n + self.y + 60, 171, 16))
        self.Vald_Chk_lbl.setGeometry(QtCore.QRect(550, self.n + self.y + 60, 171, 16))
        self.Results_Chk.setGeometry(QtCore.QRect(730, self.n + self.y + 60, 171, 16))
        self.Results_lbl.setGeometry(QtCore.QRect(10, self.n + self.y + 90, 171, 41))
        self.Results_TxtBox.setGeometry(QtCore.QRect(10, self.n + self.y + 120, 300, 400))
        self.SignalsGB.setGeometry(QtCore.QRect(10, 150, 890, self.y+40))
        self.ANN_GB.setGeometry(QtCore.QRect(10, 150 +self.y+40, 890, 191))  
        MainWindow.resize(1000, 720)
        self.y = 181
        y=130

    def checking(self):
        num=int(self.NoOfOut_CB.currentText())
        self.textdetails={}
        self.rngedetails={}
        self.maxdetails={}
        self.check=0
        self.inpSig=self.InputSignals_TxtBox.toPlainText()
        if self.inpSig == '':
            font = QtGui.QFont()
            font.setPointSize(7.7)
            self.InpSig_Check_lbl.setStyleSheet("background-color: cyan")
            self.InpSig_Check_lbl.setText('Please enter Name(s)')
            self.InpSig_Check_lbl.setHidden(False)
        if not hasattr(self,'filepathId'):
            self.FileDir_lbl.setText('Please select File Directory')
            self.FileDir_lbl.setStyleSheet("background-color: cyan")
            self.FileDir_lbl.setHidden(False)
        if not hasattr(self,'filepathVer'):
            self.VerifFileDir_lbl.setText('Please select File Directory')
            self.VerifFileDir_lbl.setStyleSheet("background-color: cyan")
            self.VerifFileDir_lbl.setHidden(False)    
        for j in range(0,num):
            self.textdetails[j]=self.TextBoxes[j].toPlainText()
            self.rngedetails[j]=self.OpRngeTextBoxes[j].toPlainText()
            self.maxdetails[j]=self.OpMaxTextBoxes[j].toPlainText()
            if not self.maxdetails[j].isnumeric() or self.maxdetails[j]=='':
                self.OutMaxCheck[j].setText('Please enter integer')
                self.OutMaxCheck[j].setStyleSheet("background-color: cyan")
                self.OutMaxCheck[j].setHidden(False)
                self.check=self.check+1
            else:
                self.OutMaxCheck[j].setHidden(True)
                self.check=self.check-1
            if not self.rngedetails[j].isnumeric() or self.rngedetails[j]=='':
                self.OutRngeCheck[j].setText('Please enter integer')
                self.OutRngeCheck[j].setStyleSheet("background-color: cyan")
                self.OutRngeCheck[j].setHidden(False)
                self.check=self.check+1
            else:
                self.OutRngeCheck[j].setHidden(True)
                self.check=self.check-1
            if self.textdetails[j].isnumeric() or self.textdetails[j]=='':
                self.OutCheck[j].setText('Please enter Name')
                self.OutCheck[j].setStyleSheet("background-color: cyan")
                self.OutCheck[j].setHidden(False)
                self.check=self.check+1
            else:
                self.OutCheck[j].setHidden(True)
                self.check=self.check-1
        self.textdetails=list(self.textdetails.values())
        return self.inpSig,self.textdetails,self.rngedetails,self.maxdetails,self.check
    
    def CheckFiles(self):
        incheck,OutSig,rnge,maxm,chk=self.checking()
        if hasattr(self,'filepathId'):
            # OutSig = list(self.textdetails.values())
            self.errocodes=dp.Checkfiles(OutSig,rnge,maxm,self.filepathId)
            self.Results_lbl.setHidden(False)
            self.Results_lbl.setText('Files Check Result:')
            self.Results_TxtBox.setHidden(False)
            self.Results_TxtBox.setPlainText(self.errocodes)
            MainWindow.resize(1000, 720)
            
    def ViewStats(self):
        print('viewstats')
        InSig,OutSig,rnge,maxm,chk=self.checking()
        # OutSig = list(self.textdetails.values())
        if hasattr(self,'filepathId'):
            dp.viewstats(self.filepathId,InSig,OutSig)  
            
    def Execute(self):
        incheck,OutSig,rnge,maxm,chk=self.checking()
        if chk<0 and self.SystemOrder_SB.value() != 0:
            Ord=self.SystemOrder_SB.value()
            print(type(Ord))
            print(Ord)
            Met=self.SelectMLmethod_CB.currentText()
            InSig=self.InputSignals_TxtBox.toPlainText()
            if Met =='Artifical Neural Network':
                self.model,self.scaler_out,self.scaler_in=dp.ANN(InSig,OutSig,self.filepathId,self.filepathVer)
                self.Allclose()
                self.Exec_Chk.setHidden(False)
                self.Exec_Chk.setText('ANN Complete')
                self.Exec_Chk.setStyleSheet("background-color: lightgreen")
            print('Execute complete')
        if self.SystemOrder_SB.value() == 0:
            self.Order_Chk_lbl.setHidden(False)
            self.Order_Chk_lbl.setText('Order cannot be zero')
            self.Order_Chk_lbl.setStyleSheet("background-color: cyan")
    
    def Validate(self):
        InSig,OutSig,rnge,maxm,chk=self.checking()
        if chk<0:
            if hasattr(self,'system_mean'):
                self.Allclose()
                dp.validate(InSig,OutSig,self.system_mean,self.filepathVer)
                self.Vald_Chk_lbl.setText('Validation complete')
                self.Vald_Chk_lbl.setStyleSheet("background-color: cyan")
                self.Vald_Chk_lbl.setHidden(False)
            if hasattr(self,'model'):
                self.Allclose()
                dp.Test_ANN(self.model,self.scaler_out,self.scaler_in,self.filepathVer)
            else:
                self.Allclose()
                self.Vald_Chk_lbl.setHidden(False)
                self.Vald_Chk_lbl.setText('Please click "Execute"')
                self.Vald_Chk_lbl.setStyleSheet("background-color: cyan")
        
    
    def ViewResults(self):
        print("View Results button pressed")
        if hasattr(self,'system_mean'):
            self.Allclose()
            self.Results_lbl.setHidden(False)
            self.Results_lbl.setText('Final Matrices:')
            self.Results_TxtBox.setHidden(False)
            dp.viewresults(self.system_all)
            self.Results_TxtBox.setPlainText('A ='+str(self.system_mean.A)+"\n"+"\n"+'B ='+str(self.system_mean.B)+"\n"+"\n"+\
                                              'C ='+str(self.system_mean.C)+"\n"+"\n"+'D ='+str(self.system_mean.D)+"\n"+"\n"+\
                                              'K ='+str(self.system_mean.K))
            MainWindow.resize(1000, self.y+850)    
        else:
            self.Allclose()
            self.Results_lbl.setHidden(False)
            self.Results_TxtBox.setHidden(False)
            self.Results_TxtBox.setPlainText('Please click "Execute" to identify the system')
            MainWindow.resize(1000, self.y+850)
   
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.FileDirectory_PB.setText(_translate("MainWindow", "Select Directory"))
        self.SelectMLmethod_lbl.setText(_translate("MainWindow", "Select method:"))
        self.SelectMLmethod_CB.setItemText(0, _translate("MainWindow", "PARSIM-K"))
        self.SelectMLmethod_CB.setItemText(1, _translate("MainWindow", "N4SID"))
        self.SelectMLmethod_CB.setItemText(2, _translate("MainWindow", "Artifical Neural Network"))
        self.SystemOrder_lbl.setText(_translate("MainWindow", "Select Order:"))
        self.Order_Chk_lbl.setText(_translate("MainWindow", "Order cannot be 0"))
        self.Execute_PB.setText(_translate("MainWindow", "Execute"))
        self.ViewStats_PB.setText(_translate("MainWindow", "View statistics"))
        self.SignalsGB.setTitle(_translate("MainWindow", "Signals"))
        self.InputSignals_lbl.setText(_translate("MainWindow", "Input Signals:"))
        self.OutputSignals_lbl.setText(_translate("MainWindow", "Output Signals:"))
        self.OutputRnge_lbl.setText(_translate("MainWindow", "Range(Format:10):"))
        self.OutputMax_lbl.setText(_translate("MainWindow", "Max(Format:100):"))
        self.CheckFiles_PB.setText(_translate("MainWindow", "Check Files"))
        self.InputSignalsFormat_lbl.setText(_translate("MainWindow", "Format: \'Signal1\',\'Signal2\',\'Signal3\'"))
        self.OutputSignalsFormat_lbl.setText(_translate("MainWindow", "Format: \'Signal1\'"))
        self.NoOfOut_CB.setItemText(0, _translate("MainWindow", "1"))
        self.NoOfOut_CB.setItemText(1, _translate("MainWindow", "2"))
        self.NoOfOut_CB.setItemText(2, _translate("MainWindow", "3"))
        self.NoOfOuttSignals_lbl.setText(_translate("MainWindow", "No. of Outputs:"))
        self.InpSig_Check_lbl.setText(_translate("MainWindow", "Please mention Input Signals"))
        self.SIPPYHeader_lbl.setText(_translate("MainWindow", "System Identification GUI"))
        self.VerifFileDir_PB.setText(_translate("MainWindow", "Verification Directory"))
        self.Stats_Chk_lbl.setText(_translate("MainWindow", "Please select File Directory"))
        self.FileDir_lbl.setText(_translate("MainWindow", "Please select File Directory"))
        self.Validate_PB.setText(_translate("MainWindow", "Validate"))
        self.ViewResults_PB.setText(_translate("MainWindow", "View Results"))
        self.VerifFileDir_lbl.setText(_translate("MainWindow", "TextLabel"))
        self.Exec_Chk.setText(_translate("MainWindow", "TextLabel"))
        self.Vald_Chk_lbl.setText(_translate("MainWindow", "Please complete 'Execute'"))
        self.Results_Chk.setText(_translate("MainWindow", "Please complete 'Execute'"))
        self.Results_lbl.setText(_translate("MainWindow", "Matrix result:"))
        self.Order_Chk_lbl.setHidden(True)
        self.FileDir_lbl.setHidden(True)
        self.VerifFileDir_lbl.setHidden(True)
        self.InpSig_Check_lbl.setHidden(True)
        self.OutputSignals_TxtBox.setHidden(True)
        self.CheckFiles_PB.setHidden(False)
        self.Stats_Chk_lbl.setHidden(True)
        self.Exec_Chk.setHidden(True)
        self.Vald_Chk_lbl.setHidden(True)
        self.Results_Chk.setHidden(True)
        self.Results_lbl.setHidden(True)
        self.Results_TxtBox.setHidden(True)
        '''ANN code'''
        self.ANN_GB.setTitle(_translate("Dialog", "ANN Parameters"))
        self.ANN_GB.setHidden(True)
        self.LearningRate_lbl.setText(_translate("Dialog", "Learning Rate:"))
        self.LayerDetails_lbl.setText(_translate("Dialog", "Layer Details:"))
        self.No_Neurons_Chk.setText(_translate("Dialog", "Format: 10"))
        self.No_of_Neurons_lbl.setText(_translate("Dialog", "No. of Neurons:"))
        self.Actvn_Fn_lbl.setText(_translate("Dialog", "Act. Fn:"))
        self.LearningRate_TxtBox.setPlainText(_translate("Dialog", ""))
        self.LearningRateFormat_lbl.setText(_translate("Dialog", "Format: 1e-5"))
        self.LayerNameFormat_lbl.setText(_translate("Dialog", "Format: \'LSTM1\'"))
        self.NoOfLayers_CombBox.setItemText(0, _translate("Dialog", "1"))
        self.NoOfLayers_CombBox.setItemText(1, _translate("Dialog", "2"))
        self.NoOfLayers_CombBox.setItemText(2, _translate("Dialog", "3"))
        self.NoOfLayers_CombBox.setItemText(3, _translate("Dialog", "4"))
        self.NoOfLayers_CombBox.setItemText(4, _translate("Dialog", "5"))
        self.NoOfLayers_lbl.setText(_translate("Dialog", "No. of Layers:"))
        self.No_layers_chk.setText(_translate("Dialog", "Layer Name"))
        self.NoOfNeuronsCheck_lbl.setText(_translate("Dialog", ""))
        self.ParameterTuning_lbl.setText(_translate("Dialog", "Parameter Tuning:"))
        self.ParamterTuning_CombBox.setItemText(0, _translate("Dialog", "Default"))
        self.ParamterTuning_CombBox.setItemText(1, _translate("Dialog", "Customize"))
        self.Activation_fn_CmBx.setItemText(0, _translate("Dialog", "ReLu"))
        self.Activation_fn_CmBx.setItemText(1, _translate("Dialog", "Adam"))
        self.Activation_fn_CmBx.setItemText(2, _translate("Dialog", "Dense"))
        self.Activation_fn_CmBx.setItemText(3, _translate("Dialog", "tanh"))
        self.Activation_fn_CmBx.setItemText(4, _translate("Dialog", "sigmoid"))
        self.LayerNameCheck_lbl.setText(_translate("Dialog", ""))
        self.ANNLogDir_PushBtn.setText(_translate("Dialog", "Log Directory"))
        self.ViewStats_PB.setText(_translate("Dialog", "View statistics"))
        self.Execute_PB.setText(_translate("Dialog", "Execute"))
        self.Stats_Chk_lbl.setText(_translate("Dialog", ""))
        self.Validate_PB.setText(_translate("Dialog", "Validate"))
        self.Exec_Chk.setText(_translate("Dialog", ""))
        self.Vald_Chk_lbl.setText(_translate("Dialog", ""))
        self.ViewResults_PB.setText(_translate("Dialog", "View Results"))
        self.Results_lbl.setText(_translate("Dialog", ""))
        self.Results_Chk.setText(_translate("Dialog", ""))
        self.CheckFiles_PB.setText(_translate("Dialog", "Check Files"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

